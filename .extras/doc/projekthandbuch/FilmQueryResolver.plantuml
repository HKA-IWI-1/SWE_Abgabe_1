' Copyright (c) 2024 - present Florian Sauer
'
' Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated
' documentation files (the “Software”), to deal in the Software without restriction, including without limitation the
' rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to
' permit persons to whom the Software is furnished to do so, subject to the following conditions:
'
' The above copyright notice and this permission notice shall be included in all copies or substantial portions
' of the Software.
'
' THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT
' LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
' IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
' WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
' SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

' Preview durch <Alt>d

@startuml Controller-Klasse

interface Promise<T>

package @nestjs/graphql {
  class "@Resolver" as Resolver
  hide Resolver circle

  class "@UseInterceptors" as UseInterceptors
  hide UseInterceptors circle

  class "@Query" as Query
  hide Query circle

  class "@Args" as Args
  hide Args circle

  Resolver .left[hidden].> Promise
}

package film {
  package entity {
    class Film <<entity>>
  }

  package service {
    class FilmReadService << control >>
  }

  package graphql #DDDDDD {

    interface IdInput {
        id: number
    }

    interface SuchkriterienInput {
        suchkriterien: Suchkriterien
    }

    class FilmQueryResolver << control >> << @Resolver() >> << @UseInterceptors() >> {
      + @Query() async findById(@Args() id: IdInput): Promise<Film>
      + @Query() async find(@Args() input: SuchkriterienInput | undefined): Promise<Film[]>
    }

    FilmQueryResolver o-up-> "1" FilmReadService : service
    FilmQueryResolver ..> IdInput
    FilmQueryResolver ..> SuchkriterienInput
    FilmQueryResolver ..> Resolver

    FilmQueryResolver ..> Promise

    Film .[hidden].> Promise
    FilmReadService .[hidden].> Promise
    Film .[hidden].> Resolver
    FilmReadService .[hidden].> Resolver
  }
}

hide empty members

footer (c) Florian Sauer

@enduml
